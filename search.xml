<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hexo启用cdn加速]]></title>
    <url>%2F83f2d349-cdn%2F</url>
    <content type="text"><![CDATA[参考：https://shup.cn/2017/11/21/cdn.html 分析：哪些因素会影响加载速度？js文件js文件就是JavaScript脚本文件，用来实现各种酷炫的动态效果。一般是加载在html页面的部分，所以页面加载速度首先要考虑这一块。Hexo的js文件大致包含以下3类： 公共js公共js是通用型，比如实现图片放大效果的Fancybox，或者实现图片慢加载的LazyLoad等等。这些js已经开发好，直接在html里引用(存放在镜像网站上，如BootCDN)js文件链接即可实现效果。 定制页面效果js即NexT主题中定制的某些特效，例如实现页面响应式效果的Bootstrap，或者增强移动端滚动及动画效果的Motion等等。这些js理论上也是公共js，只不过NexT主题作者修改了代码，以适用于NexT主题。这些js文件存放在本地Hexo目录hexo\themes\next\source\js\src下。 第三方插件js这个不用多说了吧，Hexo默认安装了不少实用的第三方插件，比如，可直接在网页中显示数学公式的MathJax，优化SEO的Baidu-push等等。这些插件可在主题配置文件_config.yml中进行配置。相关js文件有些存放在hexo\themes\next\layout_third-party中，有些则通过外部引用形式加载。图片(音、视频)如果博客文章很多，绝大部分的带宽都会消耗在这部分静态数据上。这个不多说了。 解决：逐个优化公共js加速修改_config.yml中vendors的配置全部映射到BootCDN上去 第三方js文件、图片(音、视频)加速我用的七牛云，每月 10 G的标准存储 CDN 回源流量免费额度https://blog.qiniu.com/archives/8874)。]]></content>
      <categories>
        <category>杂</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>网络</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hexo启用https加密连接]]></title>
    <url>%2Fa2a28780-https%2F</url>
    <content type="text"><![CDATA[参考：https://www.jianshu.com/p/509d2a240b7d]]></content>
      <categories>
        <category>杂</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>网络</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World Mac版]]></title>
    <url>%2Fhello-world%2F</url>
    <content type="text"><![CDATA[安装nodehttps://nodejs.org/en/ 测试 npm -vnode -v 安装hexo sudo npm install hexo –savesudo npm install -g hexo 测试 hexo -v 初始化hexo mkdir hexocd hexohexo init Install dependencies时，出现了一些mkdir权限的问题，日志提示要手动npm install sudo npm install hexo generate 在Hexo 3.0 后server被单独出来了，需要安装server sudo npm install hexo-server -savesudo npm install hexo-deployer-git –save 预览 hexo s 发布 hexo d -g 安装调试主题参考： https://www.jianshu.com/p/9f0e90cc32c2 http://eternalzttz.com/hexo-next.html修改网站图标 favicon修改菜单栏 hexo new page “tags” 去/themes/next/source/tags的index.md文件中，添加type: “tags”打开github_banner添加RSS&gt; npm install hexo-generator-feed --save 在/_config.yml 中添加 plugins: hexo-generate-feed 修改底部标签样式修改Blog\themes\next\layout_macro\post.swig中文件，command+f搜索rel=&quot;tag&quot;&gt;#，将#替换成&lt;i class=&quot;fa fa-tag&quot;&gt;&lt;/i&gt;。输入以下命令，查看效果： 侧边栏社交小图标设置social: 网站底部加上访问量 在themes/next/layout/_partials/footer.swig第一行加上 &lt;script async src=&quot;https://dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt; busuanzi_count: enable: true统计博客全站字数 npm install hexo-wordcount –save /themes/next/layout/_partials/footer.swig &lt;div class=&quot;theme-info&quot;&gt; &lt;div class=&quot;powered-by&quot;&gt;&lt;/div&gt; &lt;span class=&quot;post-count&quot;&gt;博客全站共{{ totalcount(site) }}字&lt;/span&gt; &lt;/div&gt; symbols_count_time: item_text_total: true统计文章字数、阅读时间&lt;span class=&quot;post-count&quot;&gt; &amp;nbsp | &amp;nbsp &lt;i class=&quot;fa fa-print&quot;&gt;&lt;/i&gt; 字数统计：{{ wordcount(post.content) }}&lt;/span&gt; &lt;span class=&quot;post-count&quot;&gt; &amp;nbsp | &amp;nbsp &lt;i class=&quot;fa fa-clock&quot;&gt;&lt;/i&gt; 阅读时长≈{{ min2read(post.content, {cn: 300, en: 160}) }}分钟&lt;/span&gt; # Post wordcount display settings # Dependencies: https://github.com/willin/hexo-wordcount post_wordcount: item_text: true wordcount: true # 字数统计 min2read: true # 预计阅读时长 totalcount: true # 总字数统计 separated_meta: true添加网页顶部进度加载条编辑主题配置文件，command+F搜索pace，将其值改为ture就可以了，选择一款你喜欢的样式。Installation 参考：https://github.com/theme-next/theme-next-pace pace: true浏览页面的时候显示当前浏览进度# Scroll percent label in b2t button. scrollpercent: true添加基于Valine的评论模块添加基于Mob ShareSDK的分享功能参考：https://hadronw.com/2018/05-28/hexo-addshares/ 博文置顶 修改hexo-generator-index插件，把node_modules/hexo-generator-index/lib/generator.js中代码替换为： &apos;use strict&apos;; var pagination = require(&apos;hexo-pagination&apos;); module.exports = function(locals){ var config = this.config; var posts = locals.posts; posts.data = posts.data.sort(function(a, b) { if(a.top &amp;&amp; b.top) { // 两篇文章top都有定义 if(a.top == b.top) return b.date - a.date; // 若top值一样则按照文章日期降序排 else return b.top - a.top; // 否则按照top值降序排 } else if(a.top &amp;&amp; !b.top) { // 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233） return -1; } else if(!a.top &amp;&amp; b.top) { return 1; } else return b.date - a.date; // 都没定义按照文章日期降序排 }); var paginationDir = config.pagination_dir || &apos;page&apos;; return pagination(&apos;&apos;, posts, { perPage: config.index_generator.per_page, layout: [&apos;index&apos;, &apos;archive&apos;], format: paginationDir + &apos;/%d/&apos;, data: { __index: true } }); }; 文章添加Top值，值越大，越靠前： --- title: Hexo-NexT主题配置 date: 2018-01-20 20:41:08 categories: Hexo tags: - Hexo - NexT top: 100 --- 添加侧栏推荐阅读编辑主题配置文件，如下配置即可： # Blog rolls links_icon: link links_title: 推荐阅读 #links_layout: block links_layout: inline links: Swift 4: https://developer.apple.com/swift/ Objective-C: https://developer.apple.com/documentation/objectivec修改字体大小编辑Blog/themes/next/source/css/_variables/base.styl，command+F搜索$font-size-base，修改为你想要的大小： // Font size $font-size-base = 16px在文章底部增加版权信息 在目录Blog/themes/next/layout/_macro/，添加文件 my-copyright.swig，内容如下：my-copyright.swig 在目录Blog/themes/next/source/css/_common/components/post/下添加文件my-post-copyright.styl，添加以下代码：my-post-copyright.styl 修改Blog/themes/next/layout/_macro/post.swig，在如图位置添加以下代码： &lt;div&gt; {% if not is_index %} {% include 'my-copyright.swig' %} {% endif %} &lt;/div&gt; 在Blog/themes/next/source/css/_common/components/post/post.styl文件最后加入下面的代码： @import &quot;my-post-copyright&quot; 在Markdown文章中加入 copyright : ture --- title: Hexo-NexT主题配置 date: 2018-01-20 20:41:08 categories: Hexo tags: - Hexo - NexT top: 100 copyright: ture --- 配置根目录下的_config.yml文件，配置为： # URL ## If your site is put in a subdirectory, set url as &apos;http://yoursite.com/child&apos; and root as &apos;/child/&apos; url: http://tianbin.org root: / permalink: :year/:month/:day/:title/ permalink_defaults:Hexo博客添加站内搜索 NexT主题支持集成 Swiftype、 微搜索、Local Search 和 Algolia。下面介绍Local Search的安装吧。 安装 hexo-generator-search npm install hexo-generator-search –save 安装 hexo-generator-searchdb npm install hexo-generator-searchdb –save 打开local_search local_search: enable: ture为文章中的代码块增加一键复制功能copy_button: enable: true自动备份Hexo博客源文件参考：备份Hexo博客源文件 安装shelljs模块 npm install –save shelljs 编写脚本文件，内容如下：auto_backup_script.js]]></content>
      <categories>
        <category>杂</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
